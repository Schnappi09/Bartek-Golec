

from random import randrange
n=4
matrix4=[[randrange(20) for i in range(n)] for j in range(n)]
print(matrix4)
s=0
neo=[0]*n
for i in range(n):
    for j in range(n):
        s+=matrix4[i][j]
    neo[i]=s
    s=0
        
print(neo)

from random import randrange
n=4
matrix4=[[randrange(20) for j in range(n)] for i in range(n)]
print(matrix4)
s=0
for i in range(n):
    for j in range(n):
        s+=matrix4[i][j]       
print(s)

matrix=[[4]*5]*3
matrix[0][0]=0
print(matrix)

matrix2=[[5 for i in range(4)] for j in range(3)]
matrix2[0][1]=9
print(matrix2)

matrix3=[[5]*3 for i in range(4)]
matrix3[0][0]=0
print(matrix3)

#wypełnienie n x m liczbami naturalnymi od 1
n=int(input())
m=int(input())
d=[[0]*m]*n
x=0
for i in range(n):
    for j in range(m):
        d[i][j]=x
        x+=1
print(d)

#głupi sposob
c=[[0]*4]*3
c[0][0]=1
c[0][1]=4
c[0][2]=7
c[0][3]=10
c[1][0]=2
c[1][1]=5
c[1][2]=8
c[1][3]=11
c[2][0]=3
c[2][1]=6
c[2][2]=9
c[2][3]=12
print(c)
#lepszy banał
b=[[8,1],[2,3],[6,7]]
print(b[2][1])

#banał z list
a=[4,2,8,1]
print(a)

def f(x):
    return 2*x-20
    
def bisekcja(p,q,E):
    c=(p+q)/2
    while f(c)!=0 and q-p>E:
        if f(p)*f(c)<0:
            q=c
        else:
            p=c
        c=(p+q)/2
    return c

print(bisekcja(3,11,0.001))

def f(x):
    return x**2-3*x+4

def metodatrapezow(p,q,n):
    dl=(q-p)/n
    s=f(p)+f(q)
    for i in range(1,n):
        s+= f(p + i*dl)*2
    return s*dl/2


print(metodatrapezow(1,9,4))

def f(x):
    return x**2-2*x+5

def metodaprotokatow(p,q,n):
    dl=(q-p)/n
    s=0
    for i in range(n):
        s+= f(p + i*dl + dl/2 )
    return s * dl


print(metodaprotokatow(2,10,4))

def newton_rapson2(p,E):
    a=p
    b=1
    while a-b>E:
        a=(a+b)/2
        b=p/a
    return a

# #listy podstawy

# liczby=[4,5,8,7]
# print(liczby[2])

# liczby=[4,5,8,7]
# print(liczby[-2])

# liczby=[4,5,8,7]
# print(liczby[:2])

# liczby=[4,5,8,7]
# print(liczby[0:2])

# liczby=[4,5,8,7]
# print(liczby[0:2:2])

# liczby=[4,5,8,7]
# print(liczby[::2])

# liczby=[4,5,8,7]
# print(liczby[:])

# liczby=[4,5,8,7]
# print(liczby[2])

# liczby=[4,5,8,7]
# liczby.sort()
# print(liczby)

# liczby=[4,5,8,7]
# liczby.sort()
# liczby.reverse()
# print(liczby)

# liczby=[4,5,8,7]
# print(len(liczby))


liczby=[4,5,8,9,9,9,1,2]
liczby.sort()
print(liczby[-liczby.count(liczby[-1])-1])


liczby1-10
a=1
while a<=10:
    print(a)
    a+=1
liczby30-15
a=30
while a>14:
    print(a)
    a-=1
liczby dwucyfrowe parzyste
a=10
while a<100:
    print(a)
    a+=2
suma liczb dwucyfrowych parzystych
a=10
s=0
while a<100:
    s=s+a
    a+=1
print(s)

n=int(input())
w=0
while w>0:
    w=w+n&10
    n=n//10
print(n)

def nwd_m(a,b):
    while b>0:
        a,b=b,a%b
    return a


def nww(a,b):
    r=(a*b)/nwd_m(a,b)
    return r
def nwd_o(a,b):
    while a!=b:
        if a>b:
            a-=b
        if b>a:
            b-=a
def nwd_or(a,b):
    if a==b:
        return a
    if a>b:
        print(nwd(a-b,b))
    else:
        print(nwd_or(a,b-a))


def nwd_mr(a,b):
    if b==0:
        return a
    return nwd_mr(b,a%b)
n=-1
while n!=0:
    print("""
    Wybierz metodę:
    1-nwd odejmowanie
    2-nwd modulo
    3-nwd odejmowanie rekurencyjne
    4-nwd modulo rekurencyjne
    5-nww
    Aby zakończyć wybierz 0
    """)
    n=int(input())
    print("podaj liczby")
    a=int(input())
    b=int(input())
    if n==1:
        print(nwd_o(a,b))
    if n==2:
        print(nwd_m(a,b))
    if n==3:
        print(nwd_or(a,b))
    if n==4:
        print(nwd_mr(a,b))


a=1
while a<=10:
    print("a")
    a+=1



"""
#1.35 a)
n=int(input())

def reku1(n):
    if n==1:
        return 2
    return 3*reku1(n-1)+0.5
print(reku1(n))
#b)
def rb(n):
    if n==1:
        return 0.5
    if n==2:
        return 1
    return 3*ra(n-2)+ra(n-1)
#e)
def re(n):
    if n==1:
        return 1
    if n==2:
        return 2
    if n==3:
        return 3
    return re(n-3)+2*re(n-1)
#c)
def rc(n):
    if n==1:
        return 2
    if n==2:
        return -4
    return rc(n-2)+2*rc(n-1)+0.5
#d)
def rd(n):
    if n==1:
        return -1.5
    if n==2:
        return 0
    if n==3:
        return 1.5
    return 2*rd(n-3+rd(n-2)-rd(n-1)
                
"""


##########################pygame
################
#idea rekurencji


"""
def rek2(n):
  print(n)
  if n==1:
    return 1
  if n==2:
    w=2
  if n>2:
    w=3
  rek2(n-1)*w   
    
print(rek2(5))
"""

"""
def rek2(n):
  print(n)
  if n==1:
    w=1
  if n==2:
    w=2
  if n>2:
    w=3
  rek2(n-1)*w   
    
rek2(5)
"""

"""
def rek(n):
  print(n)
  if n==1:
    return 1   
  else:
    rek(n-1)   
  print(n)
  
rek(5)
"""
################
"""
def sil(n):
  if n==1:
    return 1
  return sil(n-1)*n
"""

"""
def funkcja(n):
   if n==1:
     return 1
   else:
     return funkcja(n-1)
"""


"""
funkcja(n):
  funkcja(n-1)
"""

#regurekcja buduje "stos"
"""
def funkcja():
  funkcja()
"""

#stos-  Lifo=last in last out
"""
  Fifo- first in first out
"""
#####################
https://www.w3schools.com/python/default.asp

#==========
#SPRAWDZIAN
#==========

#3
"""
s=0
for i in range(105,1000,10):
    if i%7==1:
        s=s+i
print(s*0.5)     
"""

#4
"""
a=int(input())
b=int(input())
c=int(input())
if (a-b)>=3 or (a-c)>=3 or (b-c)>=3 or (b-a)>=3 or (c-a)>=3 or (c-b)>=3:
  print(a,b,c,"dobry kod")
else:
  print(a,b,c,"dramatyczny kod")
"""

#5
"""
a=7
b=1
s=1
n=int(input())
for i in range(1,n+1):
  s=s*((2*a)/b)
  a=a+2
  b=(b+1)**2
print(s)
"""

#SPRAWDZIAN PRZYKŁADOWY
"""
#zad 1
a = 5
b = a - 4
for i in range(5):
  a = a + b + i
b=a+b
a=b+b
print(a,b)
#zad 2
a=4
for i in range(n):
  if i&2=0
      a=a+1
prynt(a)


#zad 3 oblicz sume trycyfrowych parzystych wielokrotności 13
s=0
for i in range(100,1000):
  if i%13==0 and i%2==0:
    s=s+i
print(s)


#zad 4 sprawdź czy pierwsza wpisana liczba a jest wieksza
#niż 30% sumy dwóch kolejnych wpisanych b i c

a=int(input())
b=int(input())
b=int(input())
if a>(0.3*(b+c):
      print("TAK")
else:
      print("NIE")


#zad 5 oblicz sume
n=int(input())
s=0
for i in range(n):
  s=s+(2*i+3)
print(1/s)
"""

#wartość bezwzględna
"""
from math import fabs
print(fabs(10-100))
"""

#sprawdź rozpiętość 2-elementowego zbioru losowych liczb trzycyfrowych
"""
from random import randrange
a=randrange(100,1000)
b=randrange(100,1000)
if a>b:
  print(a,b,(a-b))
else:
  print(a,b,(b-a))
"""

#gra losouje 
"""
n=int(input())

from random import randrange
print(randrange(0,10))
if n==randrange(0,10):
  print("Trafiłeś",n)
"""
#generowanie liczb losowych

"""
from random import randrange
print(randrange(0,10,2))
"""

#kartkówka
"""
n=int(input())
for i in range(1,n+1):
  if n%i==0:
    print(i, end=" ")


for i in range(99,1000):
  if i%15==0:
    print(i, end=" ")

"""

#funkcja zwraca iloczyn liczb nieparzystych
def iloczynnieparzystych():
  s=0
  for i in range(0,10,1):
    s=s+i
    return s
print(iloczynnieparzystych())

#funkcja zwracająca sume cyfr parzystych
"""
def sumacyfrparzystych():
  s=0
  for i in range(2,10,2):
    s= s+i
    return s
print(sumacyfrparzystych()) 
  """  

#funkcja zwraca(tak pisać funkcje)
"""
def podwojonasuma(c,d):
  return(c+d)*2
x=int(input())
y=int(input())
print(podwojonasuma(x,y))
"""

#prawidłowe
"""
def podwojonasuma(a,b):
  print((a+b)*2)
x=int(input())
y=int(input())
podwojonasuma(x,y)
"""

"""
underscore podwojona suma(zalecane do zmiennej)
camel podwojona suma(zalecane do funkcji)
"""

"""
#napisz funkcje obliczajaca podwojonąsume dwóch liczb
def podsum(x,y):
  print((x+y)*2)

x=int(input())
y=int(input())
podsum(x,y)
"""
#parametr do funkcji
"""
def przyzywaj(imie,nazwisko):
  print("witaj szanowny",imie,nazwisko)

imie=input()
nazwisko=input()
przyzywaj(imie,nazwisko)
"""

#deklaracja, definicja i wywołanie funkcji
"""
def lol():
  for i in range(5):
    print("cześć lolu")

lol()
"""

#czy liczba jest pierwsza
"""
n=int(input())
flag=0
for i in range(2,n):
    if n%i==0:
        flag=1
if flag==1:
    print("nie")
else:
    print("tak")
"""
#1.28 b)
"""
for i in range(4):
    for j in range(i+1):
        print("*",end="")
    if i%2==0:
        print("&&",end="")
    else:
        print("^^",end="")
"""

#1.28 b)-pomocnicze
"""
for i in range(6):
    print("*"*i)
""" 

#1.28 c)
"""
for i in range(6):
    print("*""-""|", end=" ")
"""


"""
n=int(input())
w=1
for i in range(n):
    w=w*(i+1+3)/n
print(w)
"""


"""
n=int(input())
w=0
for i in range(n):
    w=w+(1/2)/(i+1)
print(w)
"""


"""
n=int(input())
s=0
for i in range(0,n):
    s=s+(i+1)
print(2*n/s)
"""  

    
"""
n=int(input())
a=(1)
for i in range(n):
    print(a)
    a=a*(-2)
"""

    
"""
n=int(input())
for i in range(0,n):
    if i%3==0:
        print(i)
        print(i*2)
"""   
    
    
"""    
for i in range(7):
    print(-4*i+12)
"""


"""
a=-4
for i in range(7):
    print(a)
    a=a+3
"""


"""
for i in range(-4,17,3):
    print(i)
"""


"""
for i in range(7):
    print(3*i-4)
"""


"""
a=int(input())
for i in range(0,a+1):
    if a>0:
        print(i, end=" ")
else:
    print("JESTEŚ DEBILEM")
"""


"""    
for i in range(10,100):
    if i%3!=0:
        print(i, end=" ")
"""


"""
for i in range(0,21):
    print(i,"\t^2=\t",i*i)
"""


"""
for i in range(20,4,-1):
    print(i, end=" ")
"""


"""
we: a b
wy: a^2+b^2
a=int(input())
b=int(input())
print(a**2+b**2)
"""


"""
a= int(input("Podaj Liczbe"))
if a%7==0:
    print("dzieli przez 7")
"""


"""
a=int(input("Ile Masz Lat"))
if a<7:
    print("dziecko")
elif a<13:
    print("nieletni")
elif a<18:
    print("małolat")
else:
   print("dorosły")
"""


"""
a=5
if a>5:
    print("lool")
else:
    print("jest źle")
"""


"""
lista= [100,200,300]
print(lista[0+1])
"""


"""
s= int(input("Jaka stawka?"))
g= int(input("ile godzin?"))
print("Podatek 15%",s*g*0.15)
print("wypłata:",s*g*0.85)
"""
